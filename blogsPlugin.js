/* eslint-disable max-nested-callbacks */
const fs = require('fs')
const path = require('path')
const ejs = require('ejs')
const moment = require('moment')

function BlogsPlugin() {
  this.indexRoute = 'index'
  this.articelRoute = 'article'

  const articlesDirPath = path.resolve(__dirname, '_articles')
  try {
    this.articles = fs.readdirSync(articlesDirPath).map((p, index) => {
      const articlePath = path.resolve(articlesDirPath, p)
      const content = fs.readFileSync(articlePath, 'utf8')
      const stat = fs.statSync(articlePath);
      
      return {
        title: p.split('.')[0],
        content,
        description: content.replace(/(#|\*)+/g, ''),
        createTime: moment(stat.ctime).format('YYYY-MM-DD hh:mm'),
        index
      }
    })
  } catch (error) {
    console.error('BlogsPlugin:ERROR:', error)
  }
}

BlogsPlugin.prototype.apply = function(compiler) {

  compiler.plugin('emit', (compilation, callback) => {
    if (compilation.assets['index.html']) {
      const indexTemplate = compilation.assets['index.html'].source()
      const articles = this.articles
      
      compilation.assets['index.html'].source = function() {
        return ejs.render(indexTemplate, {
          articles
        })
      }
    }

    if (compilation.assets['article.html']) {
      const articleTemplate = compilation.assets['article.html'].source()
      this.articles.forEach((item, index) => {
        const html = ejs.render(articleTemplate, item)
        compilation.assets[`${index}.html`] = {
          source() {
            return html
          },
          size: function() {
            return html.length;
          }
        };
        compilation.assets[`${index}.html`].source = function() {
          return ejs.render(articleTemplate, item)
        }
      })
    }

    // 检索每个（构建输出的）chunk：
    // compilation.chunks.forEach(function(chunk) {
    //   // 检索 chunk 中（内置输入的）的每个模块：
    //   chunk.modules.forEach(function(module) {
    //     // 检索模块中包含的每个源文件路径：
    //     module.fileDependencies.forEach(function(filepath) {
    //       // 我们现在已经对源结构有不少了解……
    //     });
    //   });

    //   // 检索由 chunk 生成的每个资源(asset)文件名：
    //   chunk.files.forEach(function(filename) {
    //     // Get the asset source for each file generated by the chunk:
    //     let source = compilation.assets[filename].source();
    //   });
    // });

    callback();
  });
};

module.exports = BlogsPlugin;